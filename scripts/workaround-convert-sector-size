#!/bin/sh
# SPDX-License-Identifier: BSD-3-Clause
set -uex

# Input and output disk images
INPUT_IMG="$1"
OUTPUT_IMG="$2"
SECTOR_SIZE="$3"

# Sizes in bytes
OUTPUT_SIZE=$((4 * 1024 * 1024 * 1024))
VFAT_SIZE=$((512 * 1024 * 1024))
ALIGNMENT=$((4 * 1024 * 1024))

# Create output disk image
truncate -s "$OUTPUT_SIZE" "$OUTPUT_IMG"

# Setup loop devices with specified sector size
LOOP_INPUT=$(losetup -f --show -P "$INPUT_IMG")
LOOP_OUTPUT=$(losetup -f --show --sector-size "$SECTOR_SIZE" "$OUTPUT_IMG")

# Create partitions using sfdisk
sfdisk "$LOOP_OUTPUT" <<EOF
label: gpt
device: ${LOOP_OUTPUT}
unit: sectors
${LOOP_OUTPUT}p1 : start=$((ALIGNMENT / SECTOR_SIZE)), size=$((VFAT_SIZE / SECTOR_SIZE)), type=c12a7328-f81f-11d2-ba4b-00a0c93ec93b, bootable
${LOOP_OUTPUT}p2 : start=$((ALIGNMENT / SECTOR_SIZE + VFAT_SIZE / SECTOR_SIZE + ALIGNMENT / SECTOR_SIZE)), type=b921b045-1df0-41c3-af44-4c6f280d3fae
EOF

# Force a partition scan
losetup -d "$LOOP_OUTPUT"
LOOP_OUTPUT=$(losetup -f --show -P --sector-size "$SECTOR_SIZE" "$OUTPUT_IMG")

# Format partitions with specified sector size
mkfs.vfat -F 32 -n ESP -S "$SECTOR_SIZE" "${LOOP_OUTPUT}p1"
mkfs.ext4 -L root -b "$SECTOR_SIZE" "${LOOP_OUTPUT}p2"

# Retrieve the UUIDs of the input partitions
INPUT_UUID_VFAT=$(blkid -s UUID -o value "${LOOP_INPUT}p1")
INPUT_UUID_EXT4=$(blkid -s UUID -o value "${LOOP_INPUT}p2")

# Set the UUIDs of the output partitions to match the input partitions' UUIDs
fatlabel -i "${LOOP_OUTPUT}p1" "$( echo "${INPUT_UUID_VFAT}" | sed 's/-//g')"
tune2fs -U "$INPUT_UUID_EXT4" "${LOOP_OUTPUT}p2"

# Mount partitions
mkdir -p /mnt/input_esp /mnt/input_root /mnt/output_esp /mnt/output_root
mount "${LOOP_INPUT}p1" /mnt/input_esp
mount "${LOOP_INPUT}p2" /mnt/input_root
mount "${LOOP_OUTPUT}p1" /mnt/output_esp
mount "${LOOP_OUTPUT}p2" /mnt/output_root

# Copy data using rsync
rsync -a --delete /mnt/input_esp/ /mnt/output_esp/
rsync -a --delete /mnt/input_root/ /mnt/output_root/

# Cleanup
umount /mnt/input_esp /mnt/input_root /mnt/output_esp /mnt/output_root
rmdir /mnt/input_esp /mnt/input_root /mnt/output_esp /mnt/output_root
losetup -d "$LOOP_INPUT"
losetup -d "$LOOP_OUTPUT"

echo "Disk image created and data copied successfully."
